---
- name: Upload certificates
  ansible.netcommon.net_put:
    src: "{{ item.src }}"
    dest: "{{ item.dest | default(omit) }}"
    protocol: sftp
  loop: "{{ mikrotik_certs }}"
  no_log: true
  tags:
    - mikrotik_certs

- name: Import certificates
  community.routeros.command:
    commands:
      - '/certificate import file-name={{ item.dest }} passphrase="{{ item.passphrase | default('''') }}"'
  no_log: true
  loop: "{{ mikrotik_certs }}"
  tags:
    - mikrotik_certs

- name: Configure IP addresses
  community.routeros.command:
    commands:
      - ":if ([/ip address print count-only where {{ item.key_name }}={{ item.key_value }}]=0) do={
        /ip address add {{ item.key_name }}={{ item.key_value }} {{ item.other_values }}
        } else={
        /ip address set [find where {{ item.key_name }}={{ item.key_value }}] {{ item.other_values }}
        }"
  loop: "{{ mikrotik_ip_addresses }}"
  tags:
    - mikrotik_ip_addresses

- name: Configure IP DHCP server networks
  community.routeros.command:
    commands:
      - ':if ([/ip dhcp-server network print count-only where {{ item.key_name }}="{{ item.key_value }}"]=0) do={
        /ip dhcp-server network add {{ item.key_name }}="{{ item.key_value }}" {{ item.other_values }}
        } else={
        /ip dhcp-server network set [find where {{ item.key_name }}="{{ item.key_value }}"] {{ item.other_values }}
        }'
  loop: "{{ mikrotik_ip_dhcp_server_networks }}"
  tags:
    - mikrotik_ip_dhcp_server_networks

- name: Configure IP DHCP clients
  community.routeros.command:
    commands:
      - ':if ([/ip dhcp-client print count-only where {{ item.key_name }}="{{ item.key_value }}"]=0) do={
        /ip dhcp-client add {{ item.key_name }}="{{ item.key_value }}" {{ item.other_values }}
        } else={
        /ip dhcp-client set [find where {{ item.key_name }}="{{ item.key_value }}"] {{ item.other_values }}
        }'
  loop: "{{ mikrotik_ip_dhcp_clients }}"
  tags:
    - mikrotik_ip_dhcp_clients

- name: Configure IP services
  community.routeros.command:
    commands:
      - "/ip service set {{ item.name }} {{ item.settings }}"
  loop: "{{ mikrotik_ip_services }}"
  tags:
    - mikrotik_ip_services

- name: Configure IP pools
  community.routeros.command:
    commands:
      - ":if ([/ip pool print count-only where {{ item.key_name }}={{ item.key_value }}]=0) do={
        /ip pool add {{ item.key_name }}={{ item.key_value }} {{ item.other_values }}
        } else={
        /ip pool set [find where {{ item.key_name }}={{ item.key_value }}] {{ item.other_values }}
        }"
  loop: "{{ mikrotik_ip_pools }}"
  tags:
    - mikrotik_ip_pools

- name: Set DHCP static leases
  community.routeros.command:
    commands:
      - ":if ([/ip dhcp-server lease print count-only where {{ item.key_name }}={{ item.key_value }}]=0) do={
        /ip dhcp-server lease add {{ item.key_name }}={{ item.key_value }} {{ item.other_values }}
        } else={
        /ip dhcp-server lease set [find where {{ item.key_name }}={{ item.key_value }}] {{ item.other_values }}
        }"
  loop: "{{ mikrotik_ip_dhcp_server_leases }}"
  tags:
    - mikrotik_ip_dhcp_server_leases

- name: Set static DNS entries
  community.routeros.command:
    commands:
      - ":if ([/ip dns static print count-only where {{ item.key_name }}={{ item.key_value }}]=0) do={
        /ip dns static add {{ item.key_name }}={{ item.key_value }} {{ item.other_values }}
        } else={
        /ip dns static set [find where {{ item.key_name }}={{ item.key_value }}] {{ item.other_values }}
        }"
  loop: "{{ mikrotik_ip_dns_statics }}"
  tags:
    - mikrotik_ip_dns_statics

- name: Configure IP DNS
  community.routeros.command:
    commands:
      - "/ip dns set {{ mikrotik_ip_dns }}"
  when: mikrotik_ip_dns != ""
  tags:
    - mikrotik_ip_dns

- name: Configure OpenVPN clients
  community.routeros.command:
    commands:
      - ":if ([/interface ovpn-client print count-only where {{ item.key_name }}={{ item.key_value }}]=0) do={
        /interface ovpn-client add {{ item.key_name }}={{ item.key_value }} {{ item.other_values }}
        } else={
        /interface ovpn-client set [find where {{ item.key_name }}={{ item.key_value }}] {{ item.other_values }}
        }"
  loop: "{{ mikrotik_interface_ovpn_clients }}"
  tags:
    - mikrotik_interface_ovpn_clients

- name: Configure IP firewall rules
  community.routeros.command:
    commands:
      - ':if ([/ip firewall {{ item.type }} print count-only where comment="{{ item.comment }}"]=0) do={
        /ip firewall {{ item.type }} add comment="{{ item.comment }}" {{ item.rule }}
        } else={
        /ip firewall {{ item.type }} set [find where comment="{{ item.comment }}"] {{ item.rule }}
        }'
  loop: "{{ mikrotik_ip_firewall_rules }}"
  tags:
    - mikrotik_ip_firewall_rules
