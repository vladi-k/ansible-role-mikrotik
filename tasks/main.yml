---
- name: Upload certificates
  ansible.netcommon.net_put:
    src: "{{ item.src }}"
    dest: "{{ item.dest | default(omit) }}"
    protocol: sftp
  loop: "{{ mikrotik_certs }}"
  no_log: true
  tags:
    - mikrotik_certs

- name: Import certificates
  community.routeros.command:
    commands:
      - "/certificate import file-name={{ item.dest }} passphrase=\"{{ item.passphrase | default('') }}\""
  no_log: true
  loop: "{{ mikrotik_certs }}"
  tags:
    - mikrotik_certs

- name: Configure IP addresses
  community.routeros.command:
    commands:
      - ":if ([/ip address print count-only where {{ item.key_name }}={{ item.key_value }}]=0) do={
          /ip address add {{ item.key_name }}={{ item.key_value }} {{ item.other_values }}
         } else={
          /ip address set [find where {{ item.key_name }}={{ item.key_value }}] {{ item.other_values }}
         }"
  loop: "{{ mikrotik_ip_addresses }}"
  tags:
    - mikrotik_ip_addresses

- name: Configure IP DHCP server networks
  community.routeros.command:
    commands:
      - ":if ([/ip dhcp-server network print count-only where {{ item.key_name }}={{ item.key_value }}]=0) do={
          /ip dhcp-server network add {{ item.key_name }}={{ item.key_value }} {{ item.other_values }}
         } else={
          /ip dhcp-server network set [find where {{ item.key_name }}={{ item.key_value }}] {{ item.other_values }}
         }"
  loop: "{{ mikrotik_ip_dhcp_server_networks }}"
  tags:
    - mikrotik_ip_dhcp_server_networks

- name: Configure IP services
  community.routeros.command:
    commands:
      - "/ip service set {{ item.name }} {{ item.settings }}"
  loop: "{{ mikrotik_ip_services }}"
  tags:
    - mikrotik_ip_services

- name: Configure IP pools
  community.routeros.command:
    commands:
      - ":if ([/ip pool print count-only where {{ item.key_name }}={{ item.key_value }}]=0) do={
          /ip pool add {{ item.key_name }}={{ item.key_value }} {{ item.other_values }}
         } else={
          /ip pool set [find where {{ item.key_name }}={{ item.key_value }}] {{ item.other_values }}
         }"
  loop: "{{ mikrotik_ip_pools }}"
  tags:
    - mikrotik_ip_pools

- name: Set DHCP static leases
  community.routeros.command:
    commands:
      - ":if ([/ip dhcp-server lease print count-only where {{ item.key_name }}={{ item.key_value }}]=0) do={
          /ip dhcp-server lease add {{ item.key_name }}={{ item.key_value }} {{ item.other_values }}
         } else={
          /ip dhcp-server lease set [find where {{ item.key_name }}={{ item.key_value }}] {{ item.other_values }}
         }"
  loop: "{{ mikrotik_ip_dhcp_server_leases }}"
  tags:
    - mikrotik_ip_dhcp_server_leases

- name: Set static DNS entries
  community.routeros.command:
    commands:
      - ":if ([/ip dns static print count-only where {{ item.key_name }}={{ item.key_value }}]=0) do={
          /ip dns static add {{ item.key_name }}={{ item.key_value }} {{ item.other_values }}
         } else={
          /ip dns static set [find where {{ item.key_name }}={{ item.key_value }}] {{ item.other_values }}
         }"
  loop: "{{ mikrotik_ip_dns_statics }}"
  tags:
    - mikrotik_ip_dns_statics
